---
apiVersion: v1
kind: Service
metadata:
  name: jupyterhub-svc
spec:
  selector:
    app: jupyterhub
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
    name: jupyter-public
  - protocol: TCP
    port: 8081
    targetPort: 8081
    name: jupyter-api
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: jupyter-notebook-spawner
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch", "get", "create", "delete"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["list", "watch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jupyter-notebook-spawner
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: notebook-spawner-binding
roleRef:
  name: jupyter-notebook-spawner
  kind: Role
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: User
  name: system:serviceaccount:default:jupyter-notebook-spawner
  apiGroup: rbac.authorization.k8s.io
  namespace: default
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jupyterhub-config
data:
  config: |-
    import socket
    
    c.JupyterHub.ip = '0.0.0.0'
    c.JupyterHub.port = 8000
    c.JupyterHub.spawner_class = 'kubespawner.KubeSpawner'
    c.JupyterHub.cleanup_servers = False
    c.JupyterHub.hub_ip = '0.0.0.0'
    c.JupyterHub.hub_port = 8081
    
    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    s.connect(("8.8.8.8", 80))
    host_ip = s.getsockname()[0]
    s.close()

    c.KubeSpawner.start_timeout = 60 * 5
    c.KubeSpawner.singleuser_image_spec = 'jupyterhub/singleuser:0.9'
    c.KubeSpawner.hub_connect_ip = host_ip
    c.JupyterHub.hub_connect_ip = c.KubeSpawner.hub_connect_ip
    c.KubeSpawner.hub_connect_port = 80
    c.KubeSpawner.http_timeout = 60 * 5

    c.KubeSpawner.volumes = [ { "name": "notebook", "nfs": { "server": "jupyter-k8s-admin.cs.aalto.fi", "path": "/home/{username}" } } ]
    c.KubeSpawner.volume_mounts = [ { "mountPath": "/notebooks", "name": "notebook" } ]
    c.KubeSpawner.singleuser_working_dir = '/notebooks'

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jupyterhub
  labels:
    app: jupyterhub
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jupyterhub
  template:
    metadata:
      labels:
        app: jupyterhub
    spec:
      containers:
      - name: jupyterhub
        image: jupyterhub-mlbp
        ports:
        - containerPort: 8000
        volumeMounts:
        - name: jupyterhub-config
          mountPath: /srv/jupyterhub/jupyterhub_config.py
          subPath: config
        imagePullPolicy: Never
      tolerations:
      - key: jupyterhub
        operator: Exists
        effect: NoSchedule
      volumes:
      - name: jupyterhub-config
        configMap:
          name: jupyterhub-config
      nodeSelector:
        app: jupyterhub
      serviceAccountName: jupyter-notebook-spawner
